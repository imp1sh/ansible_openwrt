- name: display current network interface
  debug:
    msg: "We are iterating on interface {{ item.key }}"
- name: make sure key directory for interface exists
  file:
    path: "{{ openwrt_network_wg_keypath }}/{{ item.key }}"
    state: directory
    mode: 0700
  delegate_to: 127.0.0.1
  become: false
  when:
    - item.value.proto == "wireguard"
    - item.value.wg_managekeys
- name: generate private key if not there
  ansible.builtin.command: wg genkey
  args:
    chdir: "{{ openwrt_network_wg_keypath }}/{{ item.key }}"
    creates: "{{ openwrt_network_wg_keypath }}/{{ item.key }}/{{ inventory_hostname }}_private.key"
  register: server_privatekey
  delegate_to: 127.0.0.1
  become: false
  when:
    - item.value.proto == "wireguard"
    - item.value.wg_managekeys
- name: save private key to file if changed
  ansible.builtin.copy:
    content: "{{ server_privatekey.stdout }}"
    dest: "{{ openwrt_network_wg_keypath }}/{{ item.key }}/{{ inventory_hostname }}_private.key"
  delegate_to: 127.0.0.1
  become: false
  when:
    - item.value.proto == "wireguard"
    - server_privatekey.changed
    - item.value.wg_managekeys
- name: set strict private key permissions
  file:
    path: "{{ openwrt_network_wg_keypath }}/{{ item.key }}/{{ inventory_hostname }}_private.key"
    mode: '0600'
  delegate_to: 127.0.0.1
  become: false
  when:
    - item.value.proto == "wireguard"
    - item.value.wg_managekeys
- name: read private key from file
  ansible.builtin.slurp:
    src: "{{ openwrt_network_wg_keypath }}/{{ item.key }}/{{ inventory_hostname }}_private.key"
  register: server_privatekey_data
  become: false
  delegate_to: 127.0.0.1
  when:
    - item.value.proto == "wireguard"
    - item.value.wg_managekeys
- name: decode privatekey base64
  ansible.builtin.set_fact:
    server_privatekey_decoded: "{{ server_privatekey_data.content | b64decode | trim }}"
  delegate_to: 127.0.0.1
  when:
    - item.value.proto == "wireguard"
    - item.value.wg_managekeys
- name: insert private key into dict
  ansible.builtin.set_fact:
    openwrt_network_interfaces: "{{ openwrt_network_interfaces | combine({ item.key: {'wg_private_key': server_privatekey_decoded } }, recursive=True) }}"
  when:
    - item.value.proto == "wireguard"
    - item.value.wg_managekeys
- name: generate public key
  ansible.builtin.command: wg pubkey
  args:
    chdir: "{{ openwrt_network_wg_keypath }}/{{ item.key }}"
    stdin: "{{ server_privatekey_decoded }}"
    creates: "{{ openwrt_network_wg_keypath }}/{{ item.key }}/{{ inventory_hostname }}_public.key"
  register: server_publickey
  delegate_to: 127.0.0.1
  become: false
  when:
    - item.value.proto == "wireguard"
    - item.value.wg_managekeys
- name: write public key to file
  ansible.builtin.copy:
    content: "{{ server_publickey.stdout }}"
    dest: "{{ openwrt_network_wg_keypath }}/{{ item.key }}/{{ inventory_hostname }}_public.key"
  delegate_to: 127.0.0.1
  become: false
  when:
    - server_publickey.changed
    - item.value.proto == "wireguard"
    - item.value.wg_managekeys
